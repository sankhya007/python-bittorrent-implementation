# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Downloaded torrent files (to avoid committing large/copyrighted files)
*.torrent
!test.torrent  # Keep the small test torrent if needed

# Downloaded content files
*.iso
*.zip
*.rar
*.7z
*.deb
*.rpm
*.tar.gz
*.img
*.dmg

# Enhanced torrent files (can be regenerated)
*_enhanced.torrent

# Backup files created by the enhancer
*.backup
*_original_backup.torrent

# Client-generated files
downloads/  # Directory where completed downloads go (except keep structure for tracking)
!downloads/.gitkeep  # Keep directory structure but ignore contents

# Log files
*.log
logs/
!bittorrent_client.log  # Keep the main log file if you want to track issues

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows generated files
# Windows thumbnail cache files
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Temporary files
*.tmp
*.temp
*~
*.swp
*.swo

# Session files (vim)
.session.vim

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Virtual environments (already covered above, but being explicit)
venv/
env/

# Jupyter Notebook (already covered above)
.ipynb_checkpoints

# PyCharm (already covered above)
.idea/

# macOS (already covered above)
.DS_Store

# Application-specific ignores
# Prevent committing any downloaded Linux ISOs or other large files
ubuntu-*
debian-*
linuxmint-*
*desktop*.iso
*server*.iso
*netinst*.iso

# Configuration files (if you add any later)
config.ini
settings.json

# Database files (if you add any later)
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
.pytest_cache/
.mypy_cache/

# Coverage reports
.coverage
htmlcov/

# Package files (should be built, not committed)
*.whl
*.tar.gz

# Environment variables
.env
.env.local
.env.*.local

# IDE
*.sublime-*
*.komodoproject
*.sln
*.suo
*.user
*.userosscache
*.sdf
*.opendb
*.VC.db
*.VC.VC.opendb

# Runtime data
pids
*.pid
*.seed
*.pid.lock